# -*- coding: utf-8 -*-
"""
/***************************************************************************
 GeoDataDialog
                                 A QGIS plugin
 This plugin gathers cz/sk data sources.
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                             -------------------
        begin                : 2020-08-04
        git sha              : $Format:%H$
        copyright            : (C) 2020 by Test
        email                : test
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

import os
import configparser
import sys
import webbrowser

from qgis.PyQt import uic
from qgis.PyQt import QtWidgets
from qgis.PyQt import QtGui
from qgis.utils import iface
from qgis.core import *
from qgis.gui import *
from qgis.PyQt.QtGui import *
from qgis.PyQt.QtCore import *
from qgis.PyQt.QtWidgets import *

from .crs_trans.RegionHandler import RegionHandler
from .Geo_Data_dialog import GeoDataDialog

# This loads your .ui file so that PyQt can populate your plugin with the elements from Qt Designer
FORM_CLASS, _ = uic.loadUiType(os.path.join(
    os.path.dirname(__file__), 'Region_dialog_base.ui'))


class RegionDialog(QtWidgets.QDialog, FORM_CLASS):
    def __init__(self, iface, region_handler, parent=None, start=True):
        """Constructor."""
        super(RegionDialog, self).__init__(parent)
        self.iface = iface
        self.setupUi(self)
        self.start = start
        self.pushButtonSVK.setIcon(QIcon(os.path.join(os.path.dirname(__file__), "icons/svk.png")))
        self.pushButtonCZE.setIcon(QIcon(os.path.join(os.path.dirname(__file__), "icons/cze.png")))
        self.pushButtonSVK.clicked.connect(self.setRegionSVK)
        self.pushButtonCZE.clicked.connect(self.setRegionCZE)

        self.region_handler = region_handler

    def setStart(self, start):
        self.start = start

    def setRegion(self, region):
        self.region_handler.applyTransformations(region)
        QMessageBox.information(None, QApplication.translate("GeoData", "Info", None),
                                QApplication.translate("GeoData", "You have to restart QGIS to apply all settings.", None))
        s = QgsSettings()
        s.setValue("geodata_cz_sk/region", region)
        if self.start:
            self.hide()
            gdd = GeoDataDialog(self.iface, self)
            gdd.show()
            gdd.exec_()
        else:
            self.hide()

    def setRegionSVK(self):
        self.setRegion("SVK")

    def setRegionCZE(self):
        self.setRegion("CZE")
